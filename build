#!/bin/bash

# Author: Jaap Versteegh <j.r.versteegh@gmail.com>

function fail()
{
  msg=$1
  echo $msg >&2
  exit 1
}

function test_available()
{
  prog=$1
  which $prog >/dev/null || fail "$prog is required for building devstack"
}
 
test_available cmake
test_available gzip
test_available bzip2
test_available xz
test_available wget

curdir=`dirname $BASH_SOURCE`
curdir=`readlink -f $curdir`
cd $curdir

pushd src 
./download || fail "Failed to download some sources"
popd

source env.sh

if [ ! -x root/bin/cmake ]; then
  # Create preliminary build with host tools
  mkdir -p .build
  mkdir -p $curdir/root
  pushd root && ln -sf lib lib64 && popd
  
  pushd .build 
  cmake ../src -DCMAKE_INSTALL_PREFIX=$curdir/root || fail "Failed to run cmake: stage 1"
  make -j 8  >../build-1.log 2>&1 || fail "Failed to complete make openssl: stage 1"
  make -j 8  >>../build-1.log 2>&1 || fail "Failed to complete make: stage 1"
  popd
  src/clean
  rm -rf .build
fi

# Rerun with new cmake and tools
[ -d root ] || failed "Expected root directory to exist at this point"
mkdir -p .build
pushd .build 
cmake ../src -DCMAKE_INSTALL_PREFIX=$curdir/root || fail "Failed to run cmake: stage 2"
# ... and go again with full build
make -j 8  openssl >../build-2.log 2>&1 || fail "Failed to complete make openssl: stage 2"
make -j 8  >>../build-2.log 2>&1 || fail "Failed to complete make: stage 2"
popd
echo "Done!"
